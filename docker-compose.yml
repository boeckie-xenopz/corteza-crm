version: '3.5'

services:
  server:
    image: cortezaproject/corteza:${VERSION}
    env_file: [ .env ]
    # depends_on: [ db ]
    networks: [ internal ]
    ports:
      - "80:80"    
    environment:
      VIRTUAL_HOST:     ${DOMAIN}
      #LETSENCRYPT_HOST: ${DOMAIN}
    volumes: [ "./data/server:/data" ]
    restart: on-failure

  # db:
  #   image: postgres:13
  #   networks: [ internal ]
  #   restart: on-failure
  #   healthcheck: { test: ["CMD-SHELL", "pg_isready -U corteza"], interval: 10s, timeout: 5s, retries: 5 }
  #   environment:
  #     POSTGRES_USER:     corteza
  #     POSTGRES_PASSWORD: corteza
  #   volumes:
  #     - ./data/db:/var/lib/postgresql/data # Persist database data      

  es:
    image: opensearchproject/opensearch:1.3.0
    restart: on-failure
    networks: [ internal ]
    environment:
      - cluster.name=es-docker-cluster
      - node.name=es
      - cluster.initial_master_nodes=es
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
     # - OPENSEARCH_JAVA_OPTS=-Xms8000m -Xmx8000m # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_SECURITY_PLUGIN=true
      - VIRTUAL_HOST=es.${DOMAIN}
      #- LETSENCRYPT_HOST=es.${DOMAIN}
    # ulimits:
    #   memlock:
    #     # https://github.com/containerd/nerdctl/discussions/1941
    #     soft: -1
    #     hard: -1
    volumes:
      - ./data/es:/usr/share/elasticsearch/data

  discovery:
    image: cortezaproject/corteza-server-discovery:${VERSION}
    restart: on-failure
    env_file: [ .env ]
    depends_on: [ es, server ]
    networks: [ internal ]
    environment:
      VIRTUAL_HOST: discovery.${DOMAIN}
      VIRTUAL_PORT: 80
      #LETSENCRYPT_HOST: discovery.${DOMAIN}

networks: { internal: {} }